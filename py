USE DATABASE DBAUSE;

CREATE OR REPLACE PROCEDURE SP_PSD(PROCESSCENTER_ID INT, DAYSCLEARED INT, OFFICE_ID INT = NULL)
RETURNS STRING
LANGUAGE SQL
AS
$$
DECLARE
  CLIENTORDER_ID INT;
  ORDERDETAIL_ID INT;
  RELATEDCLIENTORDER_ID INT;
  RELATEDORDERDETAIL_ID INT;
  ORDERTYPE_ID INT;
  KEY_ID INT;
  KEYTYPE INT;
  SETTLEMENTAMOUNT FLOAT;
  POSTDATE TIMESTAMP;
  SETTLEMENTMETHOD_ID INT;
  ORDERED TIMESTAMP;
  ISAGGREGATION BOOLEAN;
  OFFICEID_MALTA INT := 60;
  OPSSTATUSLISTDELETED INT := 813;
BEGIN

  CREATE OR REPLACE TEMPORARY TABLE cursor_temp (
    CLIENTORDER_ID INT,
    ORDERDETAIL_ID INT,
    RELATEDCLIENTORDER_ID INT,
    RELATEDORDERDETAIL_ID INT,
    ORDERTYPE_ID INT,
    ORDERED TIMESTAMP,
    ISAGGREGATION BOOLEAN
  );

  CREATE OR REPLACE TEMPORARY TABLE items_temp (
    CLIENTORDER_ID INT,
    ORDERDETAIL_ID INT,
    RELATEDCLIENTORDER_ID INT,
    RELATEDORDERDETAIL_ID INT,
    ORDERTYPE_ID INT,
    ACCOUNT STRING,
    CONFIRMATIONNO STRING,
    ITEMNO INT,
    ORDERED TIMESTAMP,
    ARPOSTDATE TIMESTAMP,
    SETTLEMENTMETHOD_ID INT,
    SETTLEMENTMETHOD STRING,
    SETTLEMENTCURRENCYCODE STRING,
    SETTLEMENTAMOUNT FLOAT,
    ITEMTYPE_ID INT,
    ITEMTYPEDESCRIPTION STRING,
    SENDDATE TIMESTAMP,
    VALUEDATE TIMESTAMP,
    CLEARDATE TIMESTAMP,
    CURRENCYCODE STRING,
    FOREIGNAMOUNT FLOAT,
    FUNDEDBY INT,
    FUNDEDBYDESCRIPTION STRING,
    ISAGGREGATION BOOLEAN,
    OURCHECKREF STRING
  );

  INSERT INTO items_temp
  SELECT 
    h.CLIENTORDER_ID,
    d.ORDERDETAIL_ID,
    h.RELATEDCLIENTORDER_ID,
    d.RELATEDORDERDETAIL_ID,
    h.ORDERTYPE_ID,
    c.ACCOUNT,
    h.CONFIRMATIONNO,
    d.ITEMNO,
    h.ORDERED,
    NULL, -- ARPOSTDATE
    NULL, -- SETTLEMENTMETHOD_ID
    NULL, -- SETTLEMENTMETHOD
    h.SETTLEMENT_SWIFT, -- SETTLEMENTCURRENCYCODE
    d.EXTENSION, -- SETTLEMENTAMOUNT
    d.ITEMTYPE_ID,
    d.ITEMTYPEDESCRIPTION,
    COALESCE(
      CASE WHEN o.STATUS_ID = 776 THEN o.STATUSUPDATED ELSE NULL END,
      CASE WHEN oa.STATUS_ID = 776 THEN oa.STATUSUPDATED ELSE NULL END
    ) AS SENDDATE,
    COALESCE(o.VALUEDATE, oa.VALUEDATE) AS VALUEDATE,
    r.CLEARDATE,
    d.CURRENCYCODE,
    d.FOREIGNAMOUNT,
    d.FUNDEDBY,
    REPLACE(p.DESCRIPTION, 'Payment Funded By - ', '') AS FUNDEDBYDESCRIPTION,
    IFNULL(ex.ISAGGREGATION, 0),
    d.OURCHECKREF
  FROM rueschlink_dbo.client c
  JOIN rlhistory_dbo.trrawdheader h ON c.CLIENT_ID = h.CLIENT_ID
  JOIN rlhistory_dbo.trrawdetail d ON h.CLIENTORDER_ID = d.CLIENTORDER_ID
  LEFT JOIN rlhistory_dbo.CLIENTORDER_EXTENDED_HISTORY ex ON h.CLIENTORDER_ID = ex.CLIENTORDER_ID
  LEFT JOIN rlhistory_dbo.reconciliation_history r ON d.ORDERDETAIL_ID = r.ORDERDETAIL_ID
  LEFT JOIN opsess_dbo.opslog o ON d.ORDERDETAIL_ID = o.ORDERDETAIL_ID
  LEFT JOIN opsess_dbo.opslog_archive oa ON d.ORDERDETAIL_ID = oa.ORDERDETAIL_ID
  LEFT JOIN rueschlink_dbo.PICKLISTITEM p ON d.FUNDEDBY = p.PICKLISTITEM_ID
  WHERE c.PROCESSCENTER_ID = :PROCESSCENTER_ID
    AND c.OFFICE_ID = IFNULL(NULLIF(:OFFICE_ID, -1), c.OFFICE_ID)
    AND h.ORDERTYPE_ID IN (1, 4, 9, 13, 103)
    AND d.ITEMTYPE_ID <> 117
    AND (c.OFFICE_ID != 13 OR d.ITEMTYPE_ID != 3)
    AND NOT (d.EXTENSION = 0 AND d.FOREIGNAMOUNT = 0)
    AND c.STATUS_ID IN (3, 4)
    AND IFNULL(r.CLEARDATE, CURRENT_TIMESTAMP) > DATEADD(DAY, -:DAYSCLEARED, CURRENT_TIMESTAMP)
    AND (
      (c.OFFICE_ID = :OFFICEID_MALTA AND YEAR(h.ORDERED) IN (YEAR(CURRENT_TIMESTAMP), YEAR(CURRENT_TIMESTAMP) - 1, YEAR(CURRENT_TIMESTAMP) - 2))
      OR (c.OFFICE_ID != :OFFICEID_MALTA AND YEAR(h.ORDERED) IN (YEAR(CURRENT_TIMESTAMP), YEAR(CURRENT_TIMESTAMP) - 1))
    );

  DELETE FROM items_temp WHERE CLIENTORDER_ID IN (
    SELECT PREVIOUSCLIENTORDER_ID FROM mars_dbo.rsrepurchase
  );

  DELETE FROM items_temp WHERE OURCHECKREF = 'No new EFT';

  DELETE FROM items_temp WHERE ORDERDETAIL_ID IN (
    SELECT ORDERDETAIL_ID FROM opsess_dbo.OPSLOG_ARCHIVE WHERE STATUS_ID = :OPSSTATUSLISTDELETED
  );

  INSERT INTO cursor_temp
  SELECT
    CLIENTORDER_ID,
    ORDERDETAIL_ID,
    RELATEDCLIENTORDER_ID,
    RELATEDORDERDETAIL_ID,
    ORDERTYPE_ID,
    ORDERED,
    ISAGGREGATION
  FROM items_temp
  WHERE EXISTS (
    SELECT 1
    FROM ARInterface_dbo.ARTRANSACTION ar
    WHERE ar.CLIENTORDER_ID IN (items_temp.CLIENTORDER_ID, items_temp.RELATEDCLIENTORDER_ID)
  );

  WHILE TRUE
  DO
    SELECT 
      CLIENTORDER_ID,
      ORDERDETAIL_ID,
      RELATEDCLIENTORDER_ID,
      RELATEDORDERDETAIL_ID,
      ORDERTYPE_ID,
      ORDERED,
      ISAGGREGATION
    INTO
      CLIENTORDER_ID,
      ORDERDETAIL_ID,
      RELATEDCLIENTORDER_ID,
      RELATEDORDERDETAIL_ID,
      ORDERTYPE_ID,
      ORDERED,
      ISAGGREGATION
    FROM cursor_temp
    LIMIT 1;

    IF SQL%ROWCOUNT = 0 THEN
      LEAVE;
    END IF;

    KEY_ID := NULL;
    KEYTYPE := NULL;

    IF ORDERTYPE_ID IN (1, 13) OR (ORDERTYPE_ID = 4 AND ISAGGREGATION) THEN
      KEY_ID := CLIENTORDER_ID;
      KEYTYPE := 0;
    ELSEIF ORDERTYPE_ID = 9 THEN
      KEY_ID := RELATEDORDERDETAIL_ID;
      KEYTYPE := 1;
    ELSE
      KEY_ID := ORDERDETAIL_ID;
      KEYTYPE := 1;
    END IF;

    POSTDATE := NULL;
    SETTLEMENTMETHOD_ID := NULL;

    IF ORDERTYPE_ID = 9 THEN
      SELECT 
        ar.LASTUPDATE_DATE,
        ar.ACTUALPAYMENTMETHOD_ID
      INTO
        POSTDATE,
        SETTLEMENTMETHOD_ID
      FROM ARInterface_dbo.ARTRANSACTION ar
      WHERE ar.KEY_ID = KEY_ID
        AND ar.KEYTYPE = KEYTYPE
        AND ar.TYPE_ID <> 11
        AND ar.ARBALANCEDUE_SC = 0
        AND ar.LASTUPDATE_DATE < ORDERED
      ORDER BY ar.LASTUPDATE_DATE DESC
      LIMIT 1;
    ELSE
      SELECT 
        ar.LASTUPDATE_DATE,
        ar.ACTUALPAYMENTMETHOD_ID
      INTO
        POSTDATE,
        SETTLEMENTMETHOD_ID
      FROM ARInterface_dbo.ARTRANSACTION ar
      WHERE ar.KEY_ID = KEY_ID
        AND ar.KEYTYPE = KEYTYPE
        AND ar.TYPE_ID <> 11
        AND ar.ARBALANCEDUE_SC = 0
      ORDER BY ar.LASTUPDATE_DATE DESC
      LIMIT 1;
    END IF;

    IF SETTLEMENTMETHOD_ID IS NULL THEN
      IF ORDERTYPE_ID = 9 THEN
        SELECT 
          ar.ACTUALPAYMENTMETHOD_ID
        INTO
          SETTLEMENTMETHOD_ID
        FROM ARInterface_dbo.ARTRANSACTION ar
        WHERE ar.KEY_ID = KEY_ID
          AND ar.KEYTYPE = KEYTYPE
          AND ar.TYPE_ID <> 11
          AND ar.ARBALANCEDUE_SC = 0
          AND ar.ACTUALPAYMENTMETHOD_ID IS NOT NULL
          AND ar.LASTUPDATE_DATE < ORDERED
        ORDER BY ar.LASTUPDATE_DATE DESC
        LIMIT 1;
      ELSE
        SELECT 
          ar.ACTUALPAYMENTMETHOD_ID
        INTO
          SETTLEMENTMETHOD_ID
        FROM ARInterface_dbo.ARTRANSACTION ar
        WHERE ar.KEY_ID = KEY_ID
          AND ar.KEYTYPE = KEYTYPE
          AND ar.TYPE_ID <> 11
          AND ar.ARBALANCEDUE_SC = 0
          AND ar.ACTUALPAYMENTMETHOD_ID IS NOT NULL
        ORDER BY ar.LASTUPDATE_DATE DESC
        LIMIT 1;
      END IF;
    END IF;

    IF SETTLEMENTMETHOD_ID IS NULL AND ORDERTYPE_ID IN (1, 13) THEN
      KEY_ID := NULL;

      IF RELATEDCLIENTORDER_ID IS NOT NULL THEN
        SELECT 
          RELATEDCLIENTORDER_ID
        INTO
          KEY_ID
        FROM rlhistory_dbo.trrawdheader
        WHERE CLIENTORDER_ID = RELATEDCLIENTORDER_ID;
      END IF;

      IF KEY_ID IS NULL THEN
        SELECT 
          dd.CLIENTORDER_ID
        INTO
          KEY_ID
        FROM rlhistory_dbo.trrawdetail d
        JOIN rlhistory_dbo.trrawdetail dd ON d.RELATEDORDERDETAIL_ID = dd.ORDERDETAIL_ID
        WHERE d.ORDERDETAIL_ID = ORDERDETAIL_ID;
      END IF;

      IF KEY_ID IS NOT NULL THEN
        SELECT 
          ar.ACTUALPAYMENTMETHOD_ID
        INTO
          SETTLEMENTMETHOD_ID
        FROM ARInterface_dbo.ARTRANSACTION ar
        WHERE ar.KEY_ID = KEY_ID
          AND ar.KEYTYPE = KEYTYPE
          AND ar.TYPE_ID <> 11
          AND ar.ARBALANCEDUE_SC = 0
          AND ar.ACTUALPAYMENTMETHOD_ID IS NOT NULL
        ORDER BY ar.LASTUPDATE_DATE DESC
        LIMIT 1;
      END IF;
    END IF;

    IF ORDERTYPE_ID IN (1, 13) OR (ORDERTYPE_ID = 4 AND ISAGGREGATION) THEN
      UPDATE items_temp
      SET
        ARPOSTDATE = POSTDATE,
        SETTLEMENTMETHOD_ID = SETTLEMENTMETHOD_ID
      WHERE CLIENTORDER_ID = CLIENTORDER_ID;
    ELSE
      UPDATE items_temp
      SET
        ARPOSTDATE = POSTDATE,
        SETTLEMENTMETHOD_ID = SETTLEMENTMETHOD_ID
      WHERE ORDERDETAIL_ID = ORDERDETAIL_ID;
    END IF;

    IF ORDERTYPE_ID IN (1, 13) OR (ORDERTYPE_ID = 4 AND ISAGGREGATION) THEN
      DELETE FROM cursor_temp WHERE CLIENTORDER_ID = CLIENTORDER_ID;
    ELSE
      DELETE FROM cursor_temp WHERE ORDERDETAIL_ID = ORDERDETAIL_ID;
    END IF;
  END WHILE;

  UPDATE items_temp
  SET SETTLEMENTMETHOD = p.CODE
  FROM rueschlink_dbo.PICKLISTITEM p
  WHERE items_temp.SETTLEMENTMETHOD_ID = p.PICKLISTITEM_ID;

  RETURN 'Procedure executed successfully';
END;
$$;

-- Set the session parameters
ALTER SESSION SET QUOTED_IDENTIFIERS_IGNORE_CASE = TRUE;
ALTER SESSION SET ANSI_NULLS = TRUE;
